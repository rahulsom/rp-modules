buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'com.netflix.nebula:gradle-extra-configurations-plugin:5.0.3'
        classpath "com.bmuschko:gradle-nexus-plugin:2.3.1"
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.12.0"
        classpath "com.netflix.nebula:nebula-release-plugin:10.1.1"
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.12.0"
    }
}

apply plugin: "nebula.release"
apply plugin: 'io.codearte.nexus-staging'

subprojects {

    apply plugin: 'nebula.provided-base'
    apply plugin: 'java'
    apply plugin: 'groovy'

    group = "com.github.rahulsom"

    repositories {
        jcenter()
    }

    dependencies {
        provided 'io.ratpack:ratpack-core:1.5.4'
        provided 'io.ratpack:ratpack-guice:1.5.4'

        testCompile 'io.ratpack:ratpack-test:1.6.1'
        testCompile "org.codehaus.groovy:groovy-all:2.5.6"
        testCompile "org.spockframework:spock-core:1.3-groovy-2.5"
    }

}

tasks.findByName('release').dependsOn ':rp-config:uploadArchives', ':rp-i18n-json:uploadArchives'


project.afterEvaluate {
    project.tasks.findByName('closeRepository').mustRunAfter ':rp-config:uploadArchives', ':rp-i18n-json:uploadArchives'

    if (!version.toString().endsWith('-SNAPSHOT')) {
        tasks.release.dependsOn 'closeAndPromoteRepository'
    }
}

nexusStaging {
    delayBetweenRetriesInMillis = 10000
    numberOfRetries = 30
}